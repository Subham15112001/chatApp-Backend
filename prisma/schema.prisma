// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String  
  name      String?
  email     String?   @unique
  password  String 
  gender Gender @default(MALE)
  refreshToken String?
  profilePicture String?
  lastSeen  DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sentMessages     Message[]  @relation("SentMessages")
  receivedMessages Message[]  @relation("ReceivedMessages")
  initiatedChats   Chat[]    @relation("ChatInitiator")
  participatedChats Chat[]   @relation("ChatParticipant")
}

// Chat model (represents a direct chat between two users)
model Chat {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  // Relations
  initiatorId  Int
  initiator    User     @relation("ChatInitiator", fields: [initiatorId], references: [id])
  participantId Int
  participant  User     @relation("ChatParticipant", fields: [participantId], references: [id])
  messages     Message[]

  @@unique([initiatorId, participantId])
  @@index([initiatorId])
  @@index([participantId])
}

// Message model
model Message {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  
  // Relations
  chatId    Int
  chat      Chat     @relation(fields: [chatId], references: [id])
  senderId  Int
  sender    User     @relation("SentMessages", fields: [senderId], references: [id])
  receiverId Int
  receiver  User     @relation("ReceivedMessages", fields: [receiverId], references: [id])

  @@index([chatId])
  @@index([senderId])
  @@index([receiverId])
}

enum Gender {
 MALE
 FEMALE
}


